
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  class: 'class',
  secondary_class: 'secondary_class',
  class_gear_score: 'class_gear_score',
  secondary_class_gear_score: 'secondary_class_gear_score',
  vk_name: 'vk_name',
  active: 'active',
  is_eligible_for_salary: 'is_eligible_for_salary',
  joined_at: 'joined_at',
  created_at: 'created_at',
  salaryBonus: 'salaryBonus',
  googleId: 'googleId',
  vkId: 'vkId'
};

exports.Prisma.UserTagsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  tag: 'tag',
  created_at: 'created_at'
};

exports.Prisma.UserInventoryScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  type: 'type',
  name: 'name',
  quality: 'quality',
  created_at: 'created_at',
  quantity: 'quantity'
};

exports.Prisma.TasksScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  name: 'name',
  completed_at: 'completed_at',
  created_at: 'created_at'
};

exports.Prisma.RaidScalarFieldEnum = {
  id: 'id',
  type: 'type',
  start_date: 'start_date',
  created_at: 'created_at',
  is_pvp: 'is_pvp',
  is_pvp_long: 'is_pvp_long',
  dkp_summary: 'dkp_summary'
};

exports.Prisma.BossScalarFieldEnum = {
  id: 'id',
  boss_name: 'boss_name',
  dkp_points: 'dkp_points',
  category: 'category'
};

exports.Prisma.RaidBossScalarFieldEnum = {
  raid_id: 'raid_id',
  boss_id: 'boss_id'
};

exports.Prisma.RaidAttendanceScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  raid_id: 'raid_id',
  created_at: 'created_at'
};

exports.Prisma.ItemTypeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price'
};

exports.Prisma.LootScalarFieldEnum = {
  id: 'id',
  status: 'status',
  sold_at: 'sold_at',
  sold_to: 'sold_to',
  comment: 'comment',
  created_at: 'created_at',
  source: 'source',
  acquired_at: 'acquired_at',
  itemTypeId: 'itemTypeId',
  sold_to_user_id: 'sold_to_user_id',
  quantity: 'quantity',
  price: 'price',
  group_id: 'group_id'
};

exports.Prisma.TasksUserScalarFieldEnum = {
  tasks_user_id: 'tasks_user_id',
  user_id: 'user_id'
};

exports.Prisma.LootQueueScalarFieldEnum = {
  id: 'id',
  itemTypeId: 'itemTypeId',
  userId: 'userId',
  created_at: 'created_at',
  status: 'status',
  synth_target: 'synth_target',
  remaining: 'remaining',
  required: 'required',
  delivered: 'delivered'
};

exports.Prisma.GivenAwayLootScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  name: 'name',
  date: 'date',
  comment: 'comment',
  created_at: 'created_at',
  status: 'status'
};

exports.Prisma.ExpenseScalarFieldEnum = {
  id: 'id',
  date: 'date',
  amount: 'amount',
  target: 'target',
  source: 'source',
  comment: 'comment'
};

exports.Prisma.GuildFundsScalarFieldEnum = {
  id: 'id',
  year: 'year',
  month: 'month',
  totalIncome: 'totalIncome',
  totalExpenses: 'totalExpenses',
  profit: 'profit',
  salaryBudget: 'salaryBudget',
  treasuryLeft: 'treasuryLeft'
};

exports.Prisma.SalaryScalarFieldEnum = {
  id: 'id',
  year: 'year',
  month: 'month',
  userId: 'userId',
  amount: 'amount',
  bonus: 'bonus',
  total: 'total'
};

exports.Prisma.UserSalaryBonusScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  amount: 'amount',
  reason: 'reason',
  created_at: 'created_at'
};

exports.Prisma.LinkTokenScalarFieldEnum = {
  id: 'id',
  token: 'token',
  userId: 'userId',
  expiresAt: 'expiresAt',
  used: 'used'
};

exports.Prisma.NewsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  date: 'date',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  UserTags: 'UserTags',
  UserInventory: 'UserInventory',
  Tasks: 'Tasks',
  Raid: 'Raid',
  Boss: 'Boss',
  RaidBoss: 'RaidBoss',
  RaidAttendance: 'RaidAttendance',
  ItemType: 'ItemType',
  Loot: 'Loot',
  TasksUser: 'TasksUser',
  LootQueue: 'LootQueue',
  GivenAwayLoot: 'GivenAwayLoot',
  Expense: 'Expense',
  GuildFunds: 'GuildFunds',
  Salary: 'Salary',
  UserSalaryBonus: 'UserSalaryBonus',
  LinkToken: 'LinkToken',
  News: 'News'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
