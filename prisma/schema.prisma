generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                          Int      @id
  username                    String
  class                       String?
  secondary_class             String?
  class_gear_score            Int?
  secondary_class_gear_score  Int?
  vk_name                     String?
  active                      Boolean
  is_eligible_for_salary      Boolean
  joined_at                   DateTime?
  created_at                  DateTime

  inventory                   UserInventory[]
  tasks                       Tasks[]
  raidAttendance              RaidAttendance[]
  tasksAssigned               TasksUser[]

  tags                        UserTags[] @relation("UserTags")

  @@map("user")
}

model UserTags {
  id         Int      @id @default(autoincrement())
  user_id    Int
  tag        String
  created_at DateTime @default(now())

  user       User     @relation(fields: [user_id], references: [id], name: "UserTags")

  @@map("user_tags")
}

model UserInventory {
  id         Int      @id @default(autoincrement())
  user_id    Int
  type       String?
  name       String?
  quality    String?
  created_at DateTime

  user       User     @relation(fields: [user_id], references: [id])

  @@map("user_inventory")
}

model Tasks {
  id           Int          @id @default(autoincrement())
  user_id      Int
  name         String?
  completed_at DateTime?
  created_at   DateTime

  user         User         @relation(fields: [user_id], references: [id])
  assignedTo   TasksUser[]  @relation("tasks_assigned")

  @@map("tasks")
}

model Raid {
  id          Int              @id @default(autoincrement())
  type        String?
  boss_name   String?
  start_date  DateTime?
  created_at  DateTime         @default(now())
  dkp_value   Int
  

  attendance  RaidAttendance[]
  loot        Loot[]

  @@map("raid")
}

model RaidAttendance {
  id         Int      @id @default(autoincrement())
  user_id    Int
  raid_id    Int
  created_at DateTime

  user       User     @relation(fields: [user_id], references: [id])
  raid       Raid     @relation(fields: [raid_id], references: [id])

  @@map("raid_attendance")
}

model Loot {
  id             Int       @id
  raid_id        Int?
  name           String?
  quantity       Int?
  price          Float?
  status         String?
  sold_quantity  Int?
  sold_at        DateTime?
  sold_to        String?
  comment        String?
  created_at     DateTime

  raid           Raid?     @relation(fields: [raid_id], references: [id])

  @@map("loot")
}

model TasksUser {
  tasks_user_id Int
  user_id       Int

  task          Tasks     @relation("tasks_assigned", fields: [tasks_user_id], references: [id])
  user          User      @relation(fields: [user_id], references: [id])

  @@id([tasks_user_id, user_id])
  @@map("tasks_user")
}
